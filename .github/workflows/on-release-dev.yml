name: Deploy Dev server

on:
  push:
    branches: [ "dev" ]
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
      tags:
        description: 'Test scenario tags'
env:
  PR_NUMBER: ${{ github.event.number }}
  IMAGE_NAME: "hoangnm1001/otm-api"
  MAX_RETRY: 3
jobs:
  build-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@v2.1.0
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Create .env file
      uses: ozaytsev86/create-env-file@v1
      with:
        ENV_DB_HOST: "125.212.235.135"
        ENV_DB_PORT: 5432
        ENV_DB_USER: "postgres"
        ENV_DB_PASS: "uu8D]HV,bm-7}DzLu@j$"
        ENV_DB_DBNAME: "otm_realdata"
        ENV_AUTH_TWILLO: "adb7d8a02ba80f551fed5066b23e7f67"
        ENV_AMQBSERVER_LINK: "amqp://admin:HH223344@rabbit.2soft.top"
        ENV_QUEUE_ORDER_SEND_NOTI_NAME: "otm-noti-queue"
        ENV_REDIS_HOST: "149.28.158.115"
        ENV_REDIS_PASSWORD: "Hh223344@"
        ENV_REDIS_USER_NAME: "default"
        ENV_REDIS_PORT: 6379
        ENV_REDIS_TTL: 300

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ env.IMAGE_NAME }}:latest

    - name: SSH to dev server to run container
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        envs: IMAGE_NAME
        script: |
          docker pull $IMAGE_NAME:latest
          docker stop otm-api
          docker rm otm-api
          docker run -d -p 4003:4000 --name otm-api $IMAGE_NAME:latest